on:
  workflow_call:
    outputs:
      image:
        description: Docker Image Uri
        value: ${{ jobs.build_and_push.outputs.image }}
    inputs:
      RepositoryName:
        required: true
        type: string
      ImageTags:
        required: false
        type: string
        default: latest
      AssumeRoleArn:
        required: true
        type: string
      AwsRegion:
        required: false
        type: string
        default: ap-northeast-2

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    outputs:
      image: ${{ steps.digest.outputs.image }}

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@main

      - name: Configure AWS credentials 🔑
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.AssumeRoleArn }}
          aws-region: ${{ inputs.AwsRegion }}

      - name: Login to ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup ECR Repository
        uses: deploy-actions/setup-ecr@main
        with:
          RepositoryName: ${{ inputs.RepositoryName }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get Image Uri
        id: tags
        run: |
          Image=${{ steps.ecr.outputs.registry }}/${{ inputs.RepositoryName }}

          raw_tags=($(echo "${{ inputs.ImageTags }}" | tr ',' ' '))

          uris=""
          for tag in "${raw_tags[@]}"; do
            [[ -n "$tag" ]] && uris="${uris},${Image}:${tag}"
          done

          echo "uris=${uris#,}" >> "$GITHUB_OUTPUT"

      - name: Docker Build
        uses: docker/build-push-action@v6
        with:
          load: true
          tags: ${{ steps.tags.outputs.uris }}

      - name: Docker Push
        id: digest
        run: |
          image="${{ steps.tags.outputs.uris }}"

          raw_uris=($(echo "$image" | tr ','))
          for uri in "${raw_uris[@]}"; do
            [[ -n "$uri" ]] && docker push $uri
          done

          read -r uri <<< "${image%%,*}"

          echo "image=$(docker inspect --format '{{index .RepoDigests 0}}' $uri)" >> "$GITHUB_OUTPUT"
